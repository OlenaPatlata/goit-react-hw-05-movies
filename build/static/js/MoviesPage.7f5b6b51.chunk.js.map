{"version":3,"file":"static/js/MoviesPage.7f5b6b51.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","Pages/CastPage.jsx","webpack://goit-react-hw-05-movies/./src/components/OneMovie/OneMovie.module.css?8914","components/OneMovie/OneMovie.jsx","Pages/MovieDetailsPage.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://goit-react-hw-05-movies/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","Pages/MoviesPage.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","Pages/ReviewsPage.jsx","servises/api.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__pHPYs\",\"img\":\"Cast_img__pmQRz\",\"title\":\"Cast_title__AXoYO\",\"description\":\"Cast_description__CtT-W\"};","import { nanoid } from 'nanoid';\r\nimport s from './Cast.module.css';\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.wrapper}>\r\n        {cast.length > 0 ? (\r\n          cast.map(elem => {\r\n            const poster = elem.profile_path\r\n              ? `https://image.tmdb.org/t/p/w300${elem.profile_path}`\r\n              : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\r\n            return (\r\n              <li key={nanoid()}>\r\n                <img src={poster} alt={elem.name} className={s.img} />\r\n                <p className={s.title}>Name:</p>\r\n                <p className={s.description}>{elem.name}</p>\r\n                <p className={s.title}>Character:</p>\r\n                <p className={s.description}>{elem.character}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>We don`t have any infomation about cast for this movie.</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory, NavLink } from 'react-router-dom';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nimport Cast from 'components/Cast/Cast';\r\n\r\nconst CastPage = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const { cast } = await movieAPI.getMovieIdCredits(movieId);\r\n          setCast(cast);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  return <>{cast && <Cast cast={cast} />}</>;\r\n};\r\n\r\nexport default CastPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OneMovie_container__3uvph\",\"img__wrapper\":\"OneMovie_img__wrapper__ZmhXy\",\"img\":\"OneMovie_img__50LYB\",\"description__wrapper\":\"OneMovie_description__wrapper__rauoo\",\"description__list\":\"OneMovie_description__list__LWjZJ\",\"title\":\"OneMovie_title__5Bijs\",\"titleMovie\":\"OneMovie_titleMovie__SEfwz\",\"overview\":\"OneMovie_overview__bkSvM\",\"nav\":\"OneMovie_nav__dGYsM\",\"current\":\"OneMovie_current__kzV2N\",\"active\":\"OneMovie_active__bJiuv\"};","import {\r\n  useParams,\r\n  useLocation,\r\n  useHistory,\r\n  useRouteMatch,\r\n  NavLink,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport s from './OneMovie.module.css';\r\nimport { nanoid } from 'nanoid';\r\nimport CastPage from 'Pages/CastPage';\r\nimport ReviewsPage from 'Pages/ReviewsPage';\r\n\r\nconst OneMovie = ({ movie, onClickHome, onClickBack }) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  const { url, path } = useRouteMatch();\r\n  const {\r\n    release_date,\r\n    first_air_date,\r\n    poster_path,\r\n    title,\r\n    name,\r\n    vote_count,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n  const date = new Date(release_date ? release_date : first_air_date);\r\n  const year = date.getFullYear();\r\n  const poster = poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n    : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\r\n  const titleMovie = title ? title : name;\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={onClickBack}>\r\n        Go back\r\n      </button>\r\n      <div className={s.container}>\r\n        <div className={s.img__wrapper}>\r\n          <img src={poster} alt={titleMovie} className={s.img} />\r\n        </div>\r\n        <div className={s.description__wrapper}>\r\n          <ul className={s.description__list}>\r\n            <li className={s.title}>\r\n              <p className={s.titleMovie}>{titleMovie}</p>\r\n              <p>{year}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Vote count</p>\r\n              <p>{vote_count}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Overview</p>\r\n              <p className={s.overview}>{overview}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Genres</p>\r\n              <p>\r\n                {genres.map(genre => {\r\n                  return <span key={nanoid()}>{genre?.name}</span>;\r\n                })}\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <p> Additional information</p>\r\n      <nav className={s.nav}>\r\n        <NavLink\r\n          exact\r\n          to={{ pathname: `${url}/cast` }}\r\n          className={s.current}\r\n          activeClassName={s.active}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={{ pathname: `${url}/reviews` }}\r\n          className={s.current}\r\n          activeClassName={s.active}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </nav>\r\n      <hr />\r\n      <Route path=\"/movies/:movieId/cast\">\r\n        <CastPage />\r\n      </Route>\r\n      <Route path=\"/movies/:movieId/reviews\">\r\n        <ReviewsPage />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneMovie;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { injectStyle } from 'react-toastify/dist/inject-style';\r\nimport * as movieAPI from 'servises/api';\r\nimport OneMovie from 'components/OneMovie/OneMovie';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n  console.log('~ ~ MovieDetailsPage ~ location', location);\r\n\r\n  if (typeof window !== 'undefined') {\r\n    injectStyle();\r\n  }\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const notify = () =>\r\n    toast.error('The resource you requested could not be found.');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const results = await movieAPI.getMovieId(movieId);\r\n          setMovie(results);\r\n        } catch (errorNew) {\r\n          setError(errorNew);\r\n          console.log(errorNew);\r\n          notify();\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n  return (\r\n    <>\r\n      {movie && <OneMovie onClickBack={handleClickBack} movie={movie} />}\r\n      {error && (\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Form_input__Is0Ub\",\"button\":\"Form_button__iE4Vh\"};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit }) => {\r\n  const [qwery, setQwery] = useState('');\r\n\r\n  const handleChange = e => {\r\n    e.preventDefault();\r\n    const { value } = e.currentTarget;\r\n    setQwery(value);\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(qwery);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => setQwery('');\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={qwery}\r\n          onChange={handleChange}\r\n          className={s.input}\r\n        ></input>\r\n        <button type=\"submit\" className={s.button}>\r\n          Search movies\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import {\r\n  useRouteMatch,\r\n  useHistory,\r\n  useParams,\r\n  useLocation,\r\n  Link,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport Form from 'components/Form/Form';\r\nimport MovieDetailsPage from 'Pages/MovieDetailsPage';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nconst MoviesPage = () => {\r\n  const [qwery, setQwery] = useState('');\r\n  const [moviesSearch, setMoviesSearch] = useState(null);\r\n  const { url, path } = useRouteMatch();\r\n  const location = useLocation();\r\n  console.log('~ ~ MoviesPage ~ location', location);\r\n  const history = useHistory();\r\n\r\n  const formSubmitHandler = newQwery => {\r\n    setQwery(newQwery);\r\n    history.push({ ...location, search: `qwery=${newQwery}` });\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (qwery.length > 0) {\r\n        try {\r\n          const { results } = await movieAPI.getSearchMovies(qwery);\r\n          setMoviesSearch([...results]);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [qwery]);\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={formSubmitHandler} />\r\n      {moviesSearch && (\r\n        <ul>\r\n          {moviesSearch.map(movie => (\r\n            <li key={nanoid()}>\r\n              <Link\r\n                to={{\r\n                  pathname: `${url}/${movie.id}`,\r\n                  state: { from: location },\r\n                  search: `?qwery=${qwery}`,\r\n                }}\r\n              >\r\n                {movie.name ? movie.name : movie.title}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <hr />\r\n      <Route path={`${path}/:movieId`}>\r\n        {moviesSearch && <MovieDetailsPage />}\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n\r\n// movies={moviesSearch}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__LIXx+\",\"description\":\"Reviews_description__Ib0p4\"};","import { nanoid } from 'nanoid';\r\nimport s from './Reviews.module.css';\r\nconst Reviews = ({ results }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {results.length > 0 ? (\r\n          results.map(elem => {\r\n            return (\r\n              <li key={nanoid()}>\r\n                <p className={s.title}>{elem.author}</p>\r\n                <p className={s.description}>{elem.content}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>We don`t have any rewiews for this movie.</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory, NavLink } from 'react-router-dom';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nimport Reviews from 'components/Reviews/Reviews';\r\n\r\nconst ReviewsPage = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const { results } = await movieAPI.getMovieIdReviews(movieId);\r\n          setReviews(results);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  return <>{reviews && <Reviews results={reviews} />}</>;\r\n};\r\n\r\nexport default ReviewsPage;\r\n","import axios from 'axios';\r\n// http://api.themoviedb.org/3/movie/550?api_key=99164fc3e2a8208f1f5e9fb36b0f2eb5\r\n\r\n// Запрос популярных фильмов\r\n// https://api.themoviedb.org/3/trending/all/day?api_key=99164fc3e2a8208f1f5e9fb36b0f2eb5\r\n\r\n// Поиск\r\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n\r\n// Пример запроса по постеру\r\n// https://image.tmdb.org/t/p/w300/dZDelM1eeEMxiBJKW9okzTZPTGn.jpg\r\n\r\n// Запрос по ID\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\n// Запрос по ревью фильма\r\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\r\n\r\n// Запрос об актёрах\r\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '99164fc3e2a8208f1f5e9fb36b0f2eb5';\r\nconst PARAM = {\r\n  trending: 'trending/all/day',\r\n  search: 'search/movie',\r\n  movieID: 'movie/',\r\n  reviews: '/reviews',\r\n  credits: '/credits',\r\n};\r\nconst getTrendingMovies = async () => {\r\n  const { data } = await axios.get(`/${PARAM.trending}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\nconst getMovieId = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getMovieIdReviews = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}${PARAM.reviews}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getMovieIdCredits = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}${PARAM.credits}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getSearchMovies = async query => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.search}?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\r\n  );\r\n  return data;\r\n};\r\nexport {\r\n  getTrendingMovies,\r\n  getMovieId,\r\n  getMovieIdReviews,\r\n  getMovieIdCredits,\r\n  getSearchMovies,\r\n};\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["cast","className","s","length","map","elem","poster","profile_path","src","alt","name","character","nanoid","movieId","useParams","useState","setCast","useEffect","movieAPI","console","log","movie","onClickBack","onClickHome","useHistory","useLocation","useRouteMatch","url","release_date","path","first_air_date","poster_path","title","vote_count","overview","genres","year","Date","getFullYear","titleMovie","type","onClick","genre","exact","to","pathname","activeClassName","CastPage","ReviewsPage","location","window","injectStyle","setMovie","error","setError","results","toast","history","push","state","from","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","onSubmit","qwery","setQwery","reset","e","preventDefault","onChange","currentTarget","moviesSearch","setMoviesSearch","newQwery","search","id","MovieDetailsPage","author","content","reviews","setReviews","axios","API_KEY","PARAM","getTrendingMovies","data","getMovieId","getMovieIdReviews","getMovieIdCredits","getSearchMovies","query","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}