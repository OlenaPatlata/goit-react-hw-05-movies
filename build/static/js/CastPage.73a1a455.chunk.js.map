{"version":3,"file":"static/js/CastPage.73a1a455.chunk.js","mappings":"qQACA,EAA0B,sBAA1B,EAAsD,kBAAtD,EAAgF,oBAAhF,EAAkH,0B,SCgClH,EA9Ba,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACd,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,OAAS,EACbH,EAAKI,KAAI,SAAAC,GACP,IAAMC,EAASD,EAAKE,aAAL,yCACuBF,EAAKE,cACvC,wDACJ,OACE,2BACE,gBAAKC,IAAKF,EAAQG,IAAKJ,EAAKK,KAAMT,UAAWC,KAC7C,cAAGD,UAAWC,EAAd,oBACA,cAAGD,UAAWC,EAAd,SAA8BG,EAAKK,QACnC,cAAGT,UAAWC,EAAd,yBACA,cAAGD,UAAWC,EAAd,SAA8BG,EAAKM,eAL5BC,EAAAA,EAAAA,WAUb,wFCGV,EApBiB,WACf,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOf,EAAP,KAAagB,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,0FACKJ,EADL,0CAG4BK,EAAAA,GAA2BL,GAHvD,gBAGab,EAHb,EAGaA,KACRgB,EAAQhB,GAJb,gDAMKmB,QAAQC,IAAR,MANL,wDAAD,KAUC,CAACP,KAEG,8BAAGb,IAAQ,SAAC,EAAD,CAAMA,KAAMA","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","Pages/CastPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__pHPYs\",\"img\":\"Cast_img__pmQRz\",\"title\":\"Cast_title__AXoYO\",\"description\":\"Cast_description__CtT-W\"};","import { nanoid } from 'nanoid';\r\nimport s from './Cast.module.css';\r\nimport PropTypes from 'prop-types';\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.wrapper}>\r\n        {cast.length > 0 ? (\r\n          cast.map(elem => {\r\n            const poster = elem.profile_path\r\n              ? `https://image.tmdb.org/t/p/w300${elem.profile_path}`\r\n              : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\r\n            return (\r\n              <li key={nanoid()}>\r\n                <img src={poster} alt={elem.name} className={s.img} />\r\n                <p className={s.title}>Name:</p>\r\n                <p className={s.description}>{elem.name}</p>\r\n                <p className={s.title}>Character:</p>\r\n                <p className={s.description}>{elem.character}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>We don`t have any infomation about cast for this movie.</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nCast.propTypes = {\r\n  cast: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default Cast;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nimport Cast from 'components/Cast/Cast';\r\n\r\nconst CastPage = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const { cast } = await movieAPI.getMovieIdCredits(movieId);\r\n          setCast(cast);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  return <>{cast && <Cast cast={cast} />}</>;\r\n};\r\n\r\nexport default CastPage;\r\n"],"names":["cast","className","s","length","map","elem","poster","profile_path","src","alt","name","character","nanoid","movieId","useParams","useState","setCast","useEffect","movieAPI","console","log"],"sourceRoot":""}