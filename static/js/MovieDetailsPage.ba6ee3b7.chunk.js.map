{"version":3,"file":"static/js/MovieDetailsPage.ba6ee3b7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","Pages/CastPage.jsx","webpack://goit-react-hw-05-movies/./src/components/OneMovie/OneMovie.module.css?8914","components/OneMovie/OneMovie.jsx","Pages/MovieDetailsPage.jsx","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","Pages/ReviewsPage.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Cast_wrapper__pHPYs\",\"img\":\"Cast_img__pmQRz\",\"title\":\"Cast_title__AXoYO\",\"description\":\"Cast_description__CtT-W\"};","import { nanoid } from 'nanoid';\r\nimport s from './Cast.module.css';\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.wrapper}>\r\n        {cast.length > 0 ? (\r\n          cast.map(elem => {\r\n            const poster = elem.profile_path\r\n              ? `https://image.tmdb.org/t/p/w300${elem.profile_path}`\r\n              : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\r\n            return (\r\n              <li key={nanoid()}>\r\n                <img src={poster} alt={elem.name} className={s.img} />\r\n                <p className={s.title}>Name:</p>\r\n                <p className={s.description}>{elem.name}</p>\r\n                <p className={s.title}>Character:</p>\r\n                <p className={s.description}>{elem.character}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>We don`t have any infomation about cast for this movie.</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory, NavLink } from 'react-router-dom';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nimport Cast from 'components/Cast/Cast';\r\n\r\nconst CastPage = () => {\r\n  const { movieId } = useParams();\r\n  const [cast, setCast] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const { cast } = await movieAPI.getMovieIdCredits(movieId);\r\n          setCast(cast);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  return <>{cast && <Cast cast={cast} />}</>;\r\n};\r\n\r\nexport default CastPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"OneMovie_container__3uvph\",\"img__wrapper\":\"OneMovie_img__wrapper__ZmhXy\",\"img\":\"OneMovie_img__50LYB\",\"description__wrapper\":\"OneMovie_description__wrapper__rauoo\",\"description__list\":\"OneMovie_description__list__LWjZJ\",\"title\":\"OneMovie_title__5Bijs\",\"titleMovie\":\"OneMovie_titleMovie__SEfwz\",\"overview\":\"OneMovie_overview__bkSvM\",\"nav\":\"OneMovie_nav__dGYsM\",\"current\":\"OneMovie_current__kzV2N\",\"active\":\"OneMovie_active__bJiuv\"};","import {\r\n  useParams,\r\n  useLocation,\r\n  useHistory,\r\n  useRouteMatch,\r\n  NavLink,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport s from './OneMovie.module.css';\r\nimport { nanoid } from 'nanoid';\r\nimport CastPage from 'Pages/CastPage';\r\nimport ReviewsPage from 'Pages/ReviewsPage';\r\n\r\nconst OneMovie = ({ movie, onClickHome, onClickBack }) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const location = useLocation();\r\n\r\n  const { url, path } = useRouteMatch();\r\n  const {\r\n    release_date,\r\n    first_air_date,\r\n    poster_path,\r\n    title,\r\n    name,\r\n    vote_count,\r\n    overview,\r\n    genres,\r\n  } = movie;\r\n  const date = new Date(release_date ? release_date : first_air_date);\r\n  const year = date.getFullYear();\r\n  const poster = poster_path\r\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n    : 'https://nuft.edu.ua/assets/images/people/no-image.jpg';\r\n  const titleMovie = title ? title : name;\r\n\r\n  return (\r\n    <>\r\n      <button type=\"button\" onClick={onClickBack}>\r\n        Go back\r\n      </button>\r\n      <div className={s.container}>\r\n        <div className={s.img__wrapper}>\r\n          <img src={poster} alt={titleMovie} className={s.img} />\r\n        </div>\r\n        <div className={s.description__wrapper}>\r\n          <ul className={s.description__list}>\r\n            <li className={s.title}>\r\n              <p className={s.titleMovie}>{titleMovie}</p>\r\n              <p>{year}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Vote count</p>\r\n              <p>{vote_count}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Overview</p>\r\n              <p className={s.overview}>{overview}</p>\r\n            </li>\r\n            <li>\r\n              <p className={s.titleMovie}>Genres</p>\r\n              <p>\r\n                {genres.map(genre => {\r\n                  return <span key={nanoid()}>{genre?.name}</span>;\r\n                })}\r\n              </p>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <p> Additional information</p>\r\n      <nav className={s.nav}>\r\n        <NavLink\r\n          exact\r\n          to={{ pathname: `${url}/cast` }}\r\n          className={s.current}\r\n          activeClassName={s.active}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n        <NavLink\r\n          to={{ pathname: `${url}/reviews` }}\r\n          className={s.current}\r\n          activeClassName={s.active}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n      </nav>\r\n      <hr />\r\n      <Route path=\"/movies/:movieId/cast\">\r\n        <CastPage />\r\n      </Route>\r\n      <Route path=\"/movies/:movieId/reviews\">\r\n        <ReviewsPage />\r\n      </Route>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneMovie;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { injectStyle } from 'react-toastify/dist/inject-style';\r\nimport * as movieAPI from 'servises/api';\r\nimport OneMovie from 'components/OneMovie/OneMovie';\r\n\r\nconst MovieDetailsPage = () => {\r\n  const { movieId } = useParams();\r\n  const location = useLocation();\r\n  console.log('~ ~ MovieDetailsPage ~ location', location);\r\n\r\n  if (typeof window !== 'undefined') {\r\n    injectStyle();\r\n  }\r\n\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  const notify = () =>\r\n    toast.error('The resource you requested could not be found.');\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const results = await movieAPI.getMovieId(movieId);\r\n          setMovie(results);\r\n        } catch (errorNew) {\r\n          setError(errorNew);\r\n          console.log(errorNew);\r\n          notify();\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClickBack = () => {\r\n    history.push(location?.state?.from ?? '/');\r\n  };\r\n  return (\r\n    <>\r\n      {movie && <OneMovie onClickBack={handleClickBack} movie={movie} />}\r\n      {error && (\r\n        <ToastContainer\r\n          position=\"top-right\"\r\n          autoClose={3000}\r\n          hideProgressBar={false}\r\n          newestOnTop={false}\r\n          closeOnClick\r\n          rtl={false}\r\n          pauseOnFocusLoss\r\n          draggable\r\n          pauseOnHover\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__LIXx+\",\"description\":\"Reviews_description__Ib0p4\"};","import { nanoid } from 'nanoid';\r\nimport s from './Reviews.module.css';\r\nconst Reviews = ({ results }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        {results.length > 0 ? (\r\n          results.map(elem => {\r\n            return (\r\n              <li key={nanoid()}>\r\n                <p className={s.title}>{elem.author}</p>\r\n                <p className={s.description}>{elem.content}</p>\r\n              </li>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>We don`t have any rewiews for this movie.</p>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams, useLocation, useHistory, NavLink } from 'react-router-dom';\r\nimport * as movieAPI from 'servises/api';\r\n\r\nimport Reviews from 'components/Reviews/Reviews';\r\n\r\nconst ReviewsPage = () => {\r\n  const { movieId } = useParams();\r\n  const [reviews, setReviews] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (movieId) {\r\n        try {\r\n          const { results } = await movieAPI.getMovieIdReviews(movieId);\r\n          setReviews(results);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    })();\r\n  }, [movieId]);\r\n\r\n  return <>{reviews && <Reviews results={reviews} />}</>;\r\n};\r\n\r\nexport default ReviewsPage;\r\n","import axios from 'axios';\r\n// http://api.themoviedb.org/3/movie/550?api_key=99164fc3e2a8208f1f5e9fb36b0f2eb5\r\n\r\n// Запрос популярных фильмов\r\n// https://api.themoviedb.org/3/trending/all/day?api_key=99164fc3e2a8208f1f5e9fb36b0f2eb5\r\n\r\n// Поиск\r\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\r\n\r\n// Пример запроса по постеру\r\n// https://image.tmdb.org/t/p/w300/dZDelM1eeEMxiBJKW9okzTZPTGn.jpg\r\n\r\n// Запрос по ID\r\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\r\n\r\n// Запрос по ревью фильма\r\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\r\n\r\n// Запрос об актёрах\r\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\r\n\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\nconst API_KEY = '99164fc3e2a8208f1f5e9fb36b0f2eb5';\r\nconst PARAM = {\r\n  trending: 'trending/all/day',\r\n  search: 'search/movie',\r\n  movieID: 'movie/',\r\n  reviews: '/reviews',\r\n  credits: '/credits',\r\n};\r\nconst getTrendingMovies = async () => {\r\n  const { data } = await axios.get(`/${PARAM.trending}?api_key=${API_KEY}`);\r\n  return data;\r\n};\r\nconst getMovieId = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getMovieIdReviews = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}${PARAM.reviews}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getMovieIdCredits = async id => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.movieID}${id}${PARAM.credits}?api_key=${API_KEY}&language=en-US`\r\n  );\r\n  return data;\r\n};\r\nconst getSearchMovies = async query => {\r\n  const { data } = await axios.get(\r\n    `/${PARAM.search}?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\r\n  );\r\n  return data;\r\n};\r\nexport {\r\n  getTrendingMovies,\r\n  getMovieId,\r\n  getMovieIdReviews,\r\n  getMovieIdCredits,\r\n  getSearchMovies,\r\n};\r\n"],"names":["cast","className","s","length","map","elem","poster","profile_path","src","alt","name","character","nanoid","movieId","useParams","useState","setCast","useEffect","movieAPI","console","log","movie","onClickBack","onClickHome","useHistory","useLocation","useRouteMatch","url","release_date","path","first_air_date","poster_path","title","vote_count","overview","genres","year","Date","getFullYear","titleMovie","type","onClick","genre","exact","to","pathname","activeClassName","CastPage","ReviewsPage","location","window","injectStyle","setMovie","error","setError","results","toast","history","push","state","from","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","author","content","reviews","setReviews","axios","API_KEY","PARAM","getTrendingMovies","data","getMovieId","id","getMovieIdReviews","getMovieIdCredits","getSearchMovies","query"],"sourceRoot":""}